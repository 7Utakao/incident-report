version: 1
backend:
  phases:
    build:
      commands:
        - set -e
        - cd lambda
        - node -v && npm -v
        - npm ci
        - npm run build
        - ls -lh index.js
        - zip -9 -j function.zip index.js
        - ls -lh function.zip
        - unzip -l function.zip | head -n 10 || true
        - aws lambda update-function-code \
          --function-name $LAMBDA_NAME \
          --zip-file fileb://function.zip \
          --region $AWS_REGION

        # Lambda環境変数の更新
        - |
          if [ "$AWS_BRANCH" = "main" ]; then
            aws lambda update-function-configuration \
              --function-name $LAMBDA_NAME \
              --environment Variables="{AI_MODE=$AI_MODE,DDB_REPORTS=$DDB_REPORTS,BEDROCK_REGION=$BEDROCK_REGION,BEDROCK_MODEL_ID=$BEDROCK_MODEL_ID}" \
              --region $AWS_REGION
          elif [ "$AWS_BRANCH" = "develop" ]; then
            aws lambda update-function-configuration \
              --function-name incident-report-api-dev-staging \
              --environment Variables="{AI_MODE=$AI_MODE_STAGING,DDB_REPORTS=$DDB_REPORTS_STAGING,BEDROCK_REGION=$BEDROCK_REGION,BEDROCK_MODEL_ID=$BEDROCK_MODEL_ID}" \
              --region $AWS_REGION
          fi

frontend:
  phases:
    preBuild:
      commands:
        - npm ci
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: .output/public
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - lambda/node_modules/**/*
  customHeaders:
    - pattern: '**/*'
      headers:
        - key: 'X-Frame-Options'
          value: 'DENY'
        - key: 'X-Content-Type-Options'
          value: 'nosniff'
        - key: 'Referrer-Policy'
          value: 'strict-origin-when-cross-origin'
